openapi: 3.0.3
info:
  title: camelAI API
  version: 1.0.0 (v1)
  description: API for camelAI - AI-powered data analytics platform
paths:
  /api/v1/.well-known/jwks.json:
    get:
      operationId: getJWKS
      description: Returns public keys for JWT verification in JWKS format.
      summary: JWKS Discovery Endpoint
      tags:
      - STS
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWKSResponse'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWKSErrorResponse'
          description: ''
      x-hidden: true
  /api/v1/ask_camel:
    post:
      operationId: ask_camel_create
      description: 'Ask Camel a question: always creates a new thread per call. Provide
        exactly one of `source_id` (an existing connection ID) or `source` (an inline
        connection configuration with a `type`), and optional `knowledge_base_entries`
        and `reference_queries`.'
      summary: Ask Camel
      tags:
      - ask_camel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskCamelUnifiedSchemaRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskCamelResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ''
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredResponse'
          description: ''
  /api/v1/iframe/create:
    post:
      operationId: iframe_create_create
      description: Creates a secure iframe link with a cached JWT token.
      summary: Create iframe link
      tags:
      - iframe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIframeLinkRequestRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIframeLinkResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IframeErrorResponse'
          description: ''
  /api/v1/knowledge-base/:
    get:
      operationId: knowledge_base_list
      description: Retrieve all knowledge base entries accessible to the current user.
      summary: List knowledge base entries
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - knowledge-base
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedKnowledgeBaseList'
          description: ''
    post:
      operationId: knowledge_base_create
      description: Create a new knowledge base entry for one or more data sources.
      summary: Create knowledge base entry
      tags:
      - knowledge-base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
  /api/v1/knowledge-base/{id}/:
    get:
      operationId: knowledge_base_retrieve
      description: Get details of a specific knowledge base entry.
      summary: Retrieve knowledge base entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - knowledge-base
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
    put:
      operationId: knowledge_base_update
      description: Update an entire knowledge base entry.
      summary: Update knowledge base entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - knowledge-base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
    patch:
      operationId: knowledge_base_partial_update
      description: Update specific fields of a knowledge base entry.
      summary: Partial update knowledge base entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - knowledge-base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBaseRequest'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
    delete:
      operationId: knowledge_base_destroy
      description: Remove a knowledge base entry.
      summary: Delete knowledge base entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - knowledge-base
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/knowledge-base/source/{source_id}/:
    get:
      operationId: knowledge_base_source_retrieve
      description: Get all knowledge base entries associated with a specific data
        source.
      summary: List knowledge base entries for a specific source
      parameters:
      - in: path
        name: source_id
        schema:
          type: integer
        description: ID of the source
        required: true
      tags:
      - knowledge-base
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
  /api/v1/recommendations:
    post:
      operationId: recommendations_create
      description: Generate intelligent recommendations for questions and insights
        based on connected data sources and optional conversation context. If thread_id
        is provided, recommendations will be contextual to the conversation. Otherwise,
        general starting point recommendations will be generated.
      summary: Generate chat recommendations
      tags:
      - recommendations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRecommendationsRequest'
            examples:
              BasicRecommendationsWithoutThreadContext:
                value:
                  source_ids:
                  - 1
                  - 2
                summary: Basic recommendations without thread context
              ContextualRecommendationsWithThread:
                value:
                  source_ids:
                  - 1
                  thread_id: 123
                summary: Contextual recommendations with thread
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRecommendationsResponse'
              examples:
                BasicRecommendationsWithoutThreadContext:
                  value:
                    source_ids:
                    - 1
                    - 2
                  summary: Basic recommendations without thread context
                ContextualRecommendationsWithThread:
                  value:
                    source_ids:
                    - 1
                    thread_id: 123
                  summary: Contextual recommendations with thread
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationsErrorResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationsAccessDeniedResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationsNotFoundResponse'
          description: ''
  /api/v1/reference-queries/:
    get:
      operationId: reference_queries_list
      description: Retrieve all reference queries accessible to the current user.
      summary: List reference queries
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - reference-queries
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceQueryModelList'
          description: ''
    post:
      operationId: reference_queries_create
      description: Create a new reference query for one or more data sources. The
        query will be validated and enriched with a title and description.
      summary: Create reference query
      tags:
      - reference-queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceQueryModelRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceQueryModel'
          description: ''
  /api/v1/reference-queries/{id}/:
    get:
      operationId: reference_queries_retrieve
      description: Get details of a specific reference query.
      summary: Retrieve reference query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reference-queries
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceQueryModel'
          description: ''
    put:
      operationId: reference_queries_update
      description: Update an entire reference query. This will trigger re-validation
        and regenerate the title/description.
      summary: Update reference query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reference-queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceQueryModelRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceQueryModel'
          description: ''
    patch:
      operationId: reference_queries_partial_update
      description: Update specific fields of a reference query.
      summary: Partial update reference query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reference-queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReferenceQueryModelRequest'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceQueryModel'
          description: ''
    delete:
      operationId: reference_queries_destroy
      description: Remove a reference query.
      summary: Delete reference query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reference-queries
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reference-queries/{id}/validate/:
    post:
      operationId: reference_queries_validate_create
      description: Validate that a query is syntactically correct for the associated
        connections.
      summary: Validate a reference query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reference-queries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceQueryModelRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryValidationResponse'
          description: ''
  /api/v1/reference-queries/source/{source_id}/:
    get:
      operationId: reference_queries_source_retrieve
      description: Get all reference queries associated with a specific data source.
      summary: List reference queries for a specific source
      parameters:
      - in: path
        name: source_id
        schema:
          type: integer
        description: ID of the source
        required: true
      tags:
      - reference-queries
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceQueryModel'
          description: ''
  /api/v1/sources/:
    get:
      operationId: sources_list
      description: Return all available data sources for the current user with pagination
        support.
      summary: List data sources
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - sources
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConnectionList'
          description: ''
    post:
      operationId: sources_create
      description: Create a new connection of any supported type. The type field determines
        which connection type to create.
      summary: Add connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddConnectionRequestRequest'
            examples:
              PostgreSQLExample:
                value:
                  type: POSTGRES
                  hostname: localhost
                  port: 5432
                  username: postgres
                  password: password
                  database_name: mydb
                  selected_schemas:
                  - public
                  - analytics
                summary: PostgreSQL Example
              SnowflakeExample:
                value:
                  type: SNOWFLAKE
                  account: myaccount.us-east-1
                  user: myuser
                  password: mypassword
                  warehouse: COMPUTE_WH
                summary: Snowflake Example
              BigQueryExample:
                value:
                  type: BIGQUERY
                  service_account_key:
                    type: service_account
                    project_id: my-project
                    private_key: |-
                      -----BEGIN PRIVATE KEY-----
                      ...
                      -----END PRIVATE KEY-----
                    client_email: service@my-project.iam.gserviceaccount.com
                summary: BigQuery Example
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddConnectionResponse'
              examples:
                PostgreSQLExample:
                  value:
                    type: POSTGRES
                    hostname: localhost
                    port: 5432
                    username: postgres
                    password: password
                    database_name: mydb
                    selected_schemas:
                    - public
                    - analytics
                  summary: PostgreSQL Example
                SnowflakeExample:
                  value:
                    type: SNOWFLAKE
                    account: myaccount.us-east-1
                    user: myuser
                    password: mypassword
                    warehouse: COMPUTE_WH
                  summary: Snowflake Example
                BigQueryExample:
                  value:
                    type: BIGQUERY
                    service_account_key:
                      type: service_account
                      project_id: my-project
                      private_key: |-
                        -----BEGIN PRIVATE KEY-----
                        ...
                        -----END PRIVATE KEY-----
                      client_email: service@my-project.iam.gserviceaccount.com
                  summary: BigQuery Example
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionErrorResponse'
          description: ''
  /api/v1/sources/{id}/:
    get:
      operationId: sources_retrieve
      description: Retrieve details of a specific data source.
      summary: Get data source details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - sources
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseRetrieve'
          description: ''
    put:
      operationId: sources_update
      description: Update a data source connection. Only account_name can be updated
        via this endpoint.
      summary: Update data source
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdateRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseUpdate'
          description: ''
    patch:
      operationId: sources_partial_update
      description: Partially update a data source connection.
      summary: Partial update data source
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourcePartialUpdateRequest'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponsePartialUpdate'
          description: ''
    delete:
      operationId: sources_destroy
      description: Soft delete a connection.
      summary: Delete data source
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID of the source to delete
        required: true
      tags:
      - sources
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No content - source deleted successfully
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Not found error message
          description: ''
  /api/v1/sources/{id}/update-config/:
    patch:
      operationId: sources_update_config_partial_update
      description: Update configuration for any type of data source. The required
        fields depend on the connection type.
      summary: Update data source configuration
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID of the source to update
        required: true
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSourceConfigUpdateRequest'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Connection ID
                  account_name:
                    type: string
                    description: Connection name
                  type:
                    type: string
                    description: Connection type
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Not found error message
          description: ''
  /api/v1/sources/add/:
    post:
      operationId: sources_add_create
      description: Deprecated alias for the create connection endpoint. Prefer POST
        /sources/ instead.
      summary: Add connection (legacy route)
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: ''
  /api/v1/sources/add/bigquery/:
    post:
      operationId: sources_add_bigquery_create
      description: Create a new Google BigQuery data warehouse connection.
      summary: Add BigQuery connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BigQueryConnectionRequest'
            examples:
              BigQuery:
                value:
                  type: bigquery
                  service_account_key:
                    type: service_account
                    project_id: my-project
                    private_key: |
                      -----BEGIN PRIVATE KEY-----
                      ...
                      -----END PRIVATE KEY-----
                    client_email: service@my-project.iam.gserviceaccount.com
                summary: Google BigQuery connection with service account
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/clickhouse/:
    post:
      operationId: sources_add_clickhouse_create
      description: Create a new ClickHouse data warehouse connection.
      summary: Add ClickHouse connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClickHouseConnectionRequest'
            examples:
              ClickHouse:
                value:
                  type: clickhouse
                  host: localhost
                  port: 8443
                  username: default
                  password: password
                  database: default
                summary: ClickHouse database connection
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/mongodb/:
    post:
      operationId: sources_add_mongodb_create
      description: Create a new MongoDB database connection.
      summary: Add MongoDB connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoDBConnectionRequest'
            examples:
              MongoDB:
                value:
                  type: mongodb
                  hostname: localhost
                  port: 27017
                  username: admin
                  password: password
                  database_name: mydb
                summary: MongoDB database connection
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/motherduck/:
    post:
      operationId: sources_add_motherduck_create
      description: Create a new MotherDuck data warehouse connection.
      summary: Add MotherDuck connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MotherDuckConnectionRequest'
            examples:
              MotherDuck:
                value:
                  type: motherduck
                  database_name: my_database
                  token: motherduck_token_12345
                summary: MotherDuck cloud database connection
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/mssql/:
    post:
      operationId: sources_add_mssql_create
      description: Create a new Microsoft SQL Server database connection.
      summary: Add SQL Server connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MSSQLConnectionRequest'
            examples:
              SQLServer:
                value:
                  type: mssql
                  hostname: localhost
                  port: 1433
                  username: sa
                  password: Password123!
                  database_name: master
                summary: Microsoft SQL Server database connection
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/mysql/:
    post:
      operationId: sources_add_mysql_create
      description: Create a new MySQL database connection.
      summary: Add MySQL connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MySQLConnectionRequest'
            examples:
              MySQL:
                value:
                  type: mysql
                  hostname: localhost
                  port: 3306
                  username: root
                  password: password
                  database_name: mydb
                summary: MySQL database connection
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/postgres/:
    post:
      operationId: sources_add_postgres_create
      description: Create a new PostgreSQL database connection.
      summary: Add PostgreSQL connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostgresConnectionRequest'
            examples:
              PostgreSQL:
                value:
                  type: postgres
                  hostname: localhost
                  port: 5432
                  username: postgres
                  password: password
                  database_name: mydb
                  selected_schemas:
                  - public
                  - analytics
                summary: PostgreSQL database connection
              PostgreSQLWithConnectionString:
                value:
                  type: postgres
                  connection_string: postgres://username:password@localhost:5432/mydb
                  selected_schemas:
                  - public
                  - reporting
                summary: PostgreSQL using connection string
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/singlestore/:
    post:
      operationId: sources_add_singlestore_create
      description: Create a new SingleStore database connection.
      summary: Add SingleStore connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleStoreConnectionRequest'
            examples:
              SingleStore:
                value:
                  type: singlestore
                  hostname: localhost
                  port: 3333
                  username: root
                  password: password
                  database_name: mydb
                summary: SingleStore database connection
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/sources/add/snowflake/:
    post:
      operationId: sources_add_snowflake_create
      description: Create a new Snowflake data warehouse connection. Supports both
        password and key-pair authentication.
      summary: Add Snowflake connection
      tags:
      - sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnowflakeConnectionRequest'
            examples:
              SnowflakeWithPassword:
                value:
                  type: snowflake
                  account: myaccount.us-east-1
                  user: myuser
                  password: mypassword
                  warehouse: COMPUTE_WH
                summary: Snowflake connection using password authentication
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created connection
                  public_key_sql:
                    type: string
                    description: SQL command to add public key to Snowflake (only
                      for key-pair auth)
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                  errors:
                    type: object
                    description: Field-specific validation errors
          description: ''
  /api/v1/threads/:
    get:
      operationId: threads_list
      description: Return all threads accessible to the current user with pagination
        support.
      summary: List threads
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - threads
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThreadList'
          description: ''
  /api/v1/threads/{id}/:
    get:
      operationId: threads_retrieve
      description: Retrieve details of a specific thread.
      summary: Get thread details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this thread.
        required: true
      tags:
      - threads
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadNotFoundResponse'
          description: ''
    put:
      operationId: threads_update
      description: Update the title of a thread.
      summary: Rename thread
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this thread.
        required: true
      tags:
      - threads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreadRenameRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadNotFoundResponseRename'
          description: ''
    patch:
      operationId: threads_partial_update
      description: Partially update the title of a thread.
      summary: Rename thread (partial)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this thread.
        required: true
      tags:
      - threads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedThreadPartialRenameRequest'
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadNotFoundResponsePartialRename'
          description: ''
    delete:
      operationId: threads_destroy
      description: Delete a thread and all its messages.
      summary: Delete thread
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this thread.
        required: true
      tags:
      - threads
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadNotFoundResponseDelete'
          description: ''
  /api/v1/threads/{thread_id}/messages:
    get:
      operationId: threads_messages_retrieve
      description: Retrieve all messages for a specific thread. Messages are returned
        in chronological order.
      summary: Get thread messages
      parameters:
      - in: path
        name: thread_id
        schema:
          type: integer
        description: ID of the thread
        required: true
      tags:
      - threads
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessagesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessagesNotFoundResponse'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadMessagesAccessDeniedResponse'
          description: ''
  /api/v1/token:
    post:
      operationId: token_create
      description: Authenticate with API key and get a short-lived JWT token for browser
        use.
      summary: Issue STS Token
      tags:
      - STS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/STSTokenRequestRequest'
        required: true
      security:
      - BearerAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STSTokenResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STSErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STSErrorResponse401'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STSErrorResponse403'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STSErrorResponse429'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STSErrorResponse500'
          description: ''
components:
  schemas:
    AddConnectionRequestRequest:
      oneOf:
      - $ref: '#/components/schemas/PostgresConnectionRequest'
      - $ref: '#/components/schemas/MySQLConnectionRequest'
      - $ref: '#/components/schemas/SnowflakeConnectionRequest'
      - $ref: '#/components/schemas/BigQueryConnectionRequest'
      - $ref: '#/components/schemas/MotherDuckConnectionRequest'
      - $ref: '#/components/schemas/ClickHouseConnectionRequest'
      - $ref: '#/components/schemas/MongoDBConnectionRequest'
      - $ref: '#/components/schemas/SingleStoreConnectionRequest'
      - $ref: '#/components/schemas/MSSQLConnectionRequest'
      discriminator:
        propertyName: type
        mapping:
          postgres: '#/components/schemas/PostgresConnectionRequest'
          mysql: '#/components/schemas/MySQLConnectionRequest'
          snowflake: '#/components/schemas/SnowflakeConnectionRequest'
          bigquery: '#/components/schemas/BigQueryConnectionRequest'
          motherduck: '#/components/schemas/MotherDuckConnectionRequest'
          clickhouse: '#/components/schemas/ClickHouseConnectionRequest'
          mongodb: '#/components/schemas/MongoDBConnectionRequest'
          singlestore: '#/components/schemas/SingleStoreConnectionRequest'
          mssql: '#/components/schemas/MSSQLConnectionRequest'
    AddConnectionResponse:
      type: object
      description: Response serializer for add connection endpoint.
      properties:
        id:
          type: integer
          description: The ID of the created connection
        public_key_sql:
          type: string
          description: SQL command to add public key to Snowflake (only for Snowflake
            key-pair auth)
      required:
      - id
    AskCamelResponse:
      type: object
      description: Response serializer for ask_camel endpoint.
      properties:
        message:
          description: The response message from Camel
      required:
      - message
    AskCamelUnifiedSchemaRequest:
      type: object
      description: 'Schema-only serializer for ask_camel: provide exactly one of `source_id`
        (existing connection ID) or `source` (inline connection configuration).'
      properties:
        message:
          type: string
          minLength: 1
          description: The message to send to Camel
        source_id:
          type: integer
          description: ID of an existing connection to use; mutually exclusive with
            `source`
        knowledge_base_entries:
          type: array
          items:
            type: string
            minLength: 1
          description: List of knowledge base content strings to use for this query
        reference_queries:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceQueryRequest'
          description: List of reference queries
        stream:
          type: boolean
          default: false
          description: Whether to stream the response as an SSE stream
      required:
      - message
    BigQueryConnectionRequest:
      type: object
      description: Serializer for Google BigQuery connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `BIGQUERY`
        account_name:
          type: string
          minLength: 1
          default: BigQuery
          description: Display name for the connection
        service_account_key:
          description: Google Cloud service account key JSON
      required:
      - service_account_key
      - type
      title: BigQuery
    ChatRecommendationsRequest:
      type: object
      description: Serializer for chat recommendations request.
      properties:
        source_ids:
          type: array
          items:
            type: integer
          description: List of connection IDs to generate recommendations for
          minItems: 1
        thread_id:
          type: integer
          nullable: true
          description: Optional thread ID for contextual recommendations
    ChatRecommendationsResponse:
      type: object
      description: Serializer for chat recommendations response.
      properties:
        suggestions:
          type: array
          items:
            type: string
          description: List of recommendation suggestions
      required:
      - suggestions
    ClickHouseConnectionRequest:
      type: object
      description: Serializer for ClickHouse connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `CLICKHOUSE`
        account_name:
          type: string
          minLength: 1
          default: ClickHouse
          description: Display name for the connection
        host:
          type: string
          minLength: 1
          description: ClickHouse server hostname
          maxLength: 255
        port:
          type: integer
          default: 8443
          description: Port number
        username:
          type: string
          minLength: 1
          description: Database username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Database password
        database:
          type: string
          description: Database name (optional)
          maxLength: 255
      required:
      - host
      - password
      - type
      - username
      title: ClickHouse
    Connection:
      type: object
      description: Serializer for Connection model.
      properties:
        id:
          type: integer
          readOnly: true
        account_name:
          type: string
          maxLength: 255
        type:
          enum:
          - SUPABASE
          - POSTGRES
          - MYSQL
          - BIGQUERY
          - CSV
          - EXCEL
          - MOTHERDUCK
          - CLICKHOUSE
          - MONGODB
          - MIXPANEL
          - SQLITE
          - SINGLESTORE
          - GOOGLE_SHEETS
          - MSSQL
          - SNOWFLAKE
          type: string
          description: |-
            * `SUPABASE` - Supabase
            * `POSTGRES` - Postgres
            * `MYSQL` - MySQL
            * `BIGQUERY` - BigQuery
            * `CSV` - CSV
            * `EXCEL` - Excel
            * `MOTHERDUCK` - MotherDuck
            * `CLICKHOUSE` - ClickHouse
            * `MONGODB` - MongoDB
            * `MIXPANEL` - Mixpanel
            * `SQLITE` - SQLite
            * `SINGLESTORE` - SingleStore
            * `GOOGLE_SHEETS` - Google Sheets
            * `MSSQL` - SQL Server
            * `SNOWFLAKE` - Snowflake
          x-spec-enum-id: ef87a413e352d780
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_fully_configured:
          type: boolean
          readOnly: true
      required:
      - account_name
      - created_at
      - id
      - is_fully_configured
      - type
    ConnectionErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        errors:
          type: object
          additionalProperties: {}
          description: Field-specific validation errors
      required:
      - error
    ConnectionRequest:
      type: object
      description: Serializer for Connection model.
      properties:
        account_name:
          type: string
          minLength: 1
          maxLength: 255
        type:
          enum:
          - SUPABASE
          - POSTGRES
          - MYSQL
          - BIGQUERY
          - CSV
          - EXCEL
          - MOTHERDUCK
          - CLICKHOUSE
          - MONGODB
          - MIXPANEL
          - SQLITE
          - SINGLESTORE
          - GOOGLE_SHEETS
          - MSSQL
          - SNOWFLAKE
          type: string
          description: |-
            * `SUPABASE` - Supabase
            * `POSTGRES` - Postgres
            * `MYSQL` - MySQL
            * `BIGQUERY` - BigQuery
            * `CSV` - CSV
            * `EXCEL` - Excel
            * `MOTHERDUCK` - MotherDuck
            * `CLICKHOUSE` - ClickHouse
            * `MONGODB` - MongoDB
            * `MIXPANEL` - Mixpanel
            * `SQLITE` - SQLite
            * `SINGLESTORE` - SingleStore
            * `GOOGLE_SHEETS` - Google Sheets
            * `MSSQL` - SQL Server
            * `SNOWFLAKE` - Snowflake
          x-spec-enum-id: ef87a413e352d780
      required:
      - account_name
      - type
    CreateIframeLinkRequestRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
          description: User identifier
        srcs:
          type: array
          items:
            type: string
            minLength: 1
          description: List of Source/Connection IDs
        ttl:
          type: integer
          maximum: 3600
          minimum: 60
          default: 900
          description: 'Token lifetime in seconds (60-3600, default: 900)'
        knowledge_base_entries:
          type: array
          items:
            type: string
            minLength: 1
          description: Array of knowledge base entry strings
        reference_queries:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
              minLength: 1
            description: Reference query object with title and query
          description: Array of reference query objects (title and query)
        model:
          enum:
          - o3
          - o4-mini
          type: string
          x-spec-enum-id: 67e6b4b4dd3078c7
          default: o3
          description: |-
            Model to use for generated threads ("o3" or "o4-mini")

            * `o3` - o3
            * `o4-mini` - o4-mini
        ip_rate_limit_send_message:
          type: integer
          maximum: 1000
          minimum: 1
          description: IP-based rate limit for send_message endpoint (requests per
            window)
        ip_rate_limit_get_recommendations:
          type: integer
          maximum: 1000
          minimum: 1
          description: IP-based rate limit for get_recommendations endpoint (requests
            per window)
        ip_rate_limit_window:
          type: integer
          maximum: 3600
          minimum: 1
          default: 60
          description: 'Time window in seconds for IP-based rate limiting (default:
            60)'
      required:
      - srcs
      - uid
    CreateIframeLinkResponse:
      type: object
      properties:
        iframe_url:
          type: string
          description: URL for the iframe view
        cache_key:
          type: string
          description: Cache key for JWT retrieval
        expires_in:
          type: integer
          description: Token lifetime in seconds
      required:
      - cache_key
      - expires_in
      - iframe_url
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        details:
          type: object
          additionalProperties: {}
          description: Additional error details
      required:
      - error
    IframeErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
    JWKSErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
    JWKSResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: Array of JWK key objects
      required:
      - keys
    KnowledgeBase:
      type: object
      description: Serializer for KnowledgeBase entries.
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        connection_id:
          type: integer
          description: Connection ID this knowledge base entry applies to
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - connection_id
      - content
      - created_at
      - id
      - last_modified
    KnowledgeBaseRequest:
      type: object
      description: Serializer for KnowledgeBase entries.
      properties:
        content:
          type: string
          minLength: 1
        connection_id:
          type: integer
          description: Connection ID this knowledge base entry applies to
      required:
      - connection_id
      - content
    MSSQLConnectionRequest:
      type: object
      description: Serializer for Microsoft SQL Server connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `MSSQL`
        account_name:
          type: string
          minLength: 1
          default: SQL Server
          description: Display name for the connection
        hostname:
          type: string
          minLength: 1
          description: SQL Server hostname
          maxLength: 255
        port:
          type: integer
          default: 1433
          description: Port number
        username:
          type: string
          minLength: 1
          description: Database username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Database password
        database_name:
          type: string
          minLength: 1
          description: Database name
          maxLength: 255
        connection_string:
          type: string
          minLength: 1
          description: 'Alternative: ODBC connection string instead of individual
            parameters'
      required:
      - type
      title: SQL Server
    Message:
      type: object
      description: Serializer for Message model.
      properties:
        id:
          type: integer
          readOnly: true
        role:
          enum:
          - user
          - assistant
          - system
          - tool
          - hidden
          type: string
          description: |-
            * `user` - User
            * `assistant` - Assistant
            * `system` - System
            * `tool` - Tool
            * `hidden` - Hidden
          x-spec-enum-id: 3831a1334a76899e
        content: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        metadata: {}
        source:
          enum:
          - UI
          - API
          - MCP
          type: string
          x-spec-enum-id: 5aae49abdf40e222
          readOnly: true
          description: |-
            How this message was created

            * `UI` - Web UI
            * `API` - REST API
            * `MCP` - MCP Server
      required:
      - created_at
      - id
      - source
    MongoDBConnectionRequest:
      type: object
      description: Serializer for MongoDB connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `MONGODB`
        account_name:
          type: string
          minLength: 1
          default: MongoDB
          description: Display name for the connection
        hostname:
          type: string
          minLength: 1
          description: MongoDB server hostname
          maxLength: 255
        port:
          type: integer
          default: 27017
          description: Port number
        username:
          type: string
          minLength: 1
          description: Database username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Database password
        database_name:
          type: string
          minLength: 1
          description: Database name
          maxLength: 255
        connection_string:
          type: string
          minLength: 1
          description: 'Alternative: MongoDB connection string instead of individual
            parameters'
      required:
      - type
      title: MongoDB
    MotherDuckConnectionRequest:
      type: object
      description: Serializer for MotherDuck connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `MOTHERDUCK`
        account_name:
          type: string
          minLength: 1
          default: MotherDuck
          description: Display name for the connection
        database_name:
          type: string
          minLength: 1
          description: Database name
          maxLength: 255
        token:
          type: string
          writeOnly: true
          minLength: 1
          description: MotherDuck authentication token
      required:
      - database_name
      - token
      - type
      title: MotherDuck
    MySQLConnectionRequest:
      type: object
      description: Serializer for MySQL connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `MYSQL`
        account_name:
          type: string
          minLength: 1
          default: MySQL
          description: Display name for the connection
        hostname:
          type: string
          minLength: 1
          description: MySQL server hostname or IP address
          maxLength: 255
        port:
          type: integer
          default: 3306
          description: Port number
        username:
          type: string
          minLength: 1
          description: Database username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Database password
        database_name:
          type: string
          minLength: 1
          description: Database name
          maxLength: 255
      required:
      - database_name
      - hostname
      - password
      - type
      - username
      title: MySQL
    NotFoundResponsePartialUpdate:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    NotFoundResponseRetrieve:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    NotFoundResponseUpdate:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    PaginatedConnectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
    PaginatedKnowledgeBaseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBase'
    PaginatedReferenceQueryModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceQueryModel'
    PaginatedThreadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Thread'
    PatchedKnowledgeBaseRequest:
      type: object
      description: Serializer for KnowledgeBase entries.
      properties:
        content:
          type: string
          minLength: 1
        connection_id:
          type: integer
          description: Connection ID this knowledge base entry applies to
    PatchedReferenceQueryModelRequest:
      type: object
      description: Serializer for Reference Query model instances.
      properties:
        query:
          type: string
          minLength: 1
        title:
          type: string
          nullable: true
        connection_id:
          type: integer
          description: Connection ID this query applies to
        source_type:
          enum:
          - USER
          - AI
          - TABLE
          - ''
          - null
          type: string
          description: |-
            * `USER` - User Provided
            * `AI` - AI Generated
            * `TABLE` - Table
          x-spec-enum-id: d2df6dee60f5d4fd
          nullable: true
    PatchedSourceConfigUpdateRequest:
      type: object
      properties:
        account_name:
          type: string
          minLength: 1
          description: Display name
        hostname:
          type: string
          minLength: 1
          description: Server hostname (for database connections)
        port:
          type: integer
          description: Port number
        username:
          type: string
          minLength: 1
          description: Username
        password:
          type: string
          minLength: 1
          description: Password
        database_name:
          type: string
          minLength: 1
          description: Database name
        connection_string:
          type: string
          minLength: 1
          description: Connection string
        service_account_key:
          description: Service account key (BigQuery)
        token:
          type: string
          minLength: 1
          description: Authentication token
        host:
          type: string
          minLength: 1
          description: Host (ClickHouse)
        database:
          type: string
          minLength: 1
          description: Database (ClickHouse)
        account:
          type: string
          minLength: 1
          description: Account (Snowflake)
        user:
          type: string
          minLength: 1
          description: User (Snowflake)
        public_key:
          type: string
          minLength: 1
          description: Public key (Snowflake)
        selected_schemas:
          type: array
          items:
            type: string
            minLength: 1
          description: List of schema names to include (PostgreSQL, MySQL, etc.)
    PatchedSourcePartialUpdateRequest:
      type: object
      properties:
        account_name:
          type: string
          minLength: 1
          description: New display name for the connection
    PatchedThreadPartialRenameRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: New title for the thread
    PaymentRequiredResponse:
      type: object
      properties:
        error:
          type: string
          description: Payment required message
      required:
      - error
    PostgresConnectionRequest:
      type: object
      description: Serializer for PostgreSQL connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `POSTGRES`
        account_name:
          type: string
          minLength: 1
          default: PostgreSQL
          description: Display name for the connection
        hostname:
          type: string
          minLength: 1
          description: PostgreSQL server hostname
          maxLength: 255
        port:
          type: integer
          default: 5432
          description: Port number
        username:
          type: string
          minLength: 1
          description: Database username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Database password
        database_name:
          type: string
          minLength: 1
          description: Database name
          maxLength: 255
        connection_string:
          type: string
          minLength: 1
          description: 'Alternative: full connection string instead of individual
            parameters'
        selected_schemas:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
          description: List of schema names to include in queries and overviews. If
            empty, all schemas except system schemas will be included.
      required:
      - type
      title: PostgreSQL
    QueryValidationResponse:
      type: object
      properties:
        valid:
          type: boolean
          description: Whether the query is valid
        error:
          type: string
          description: Error message if query is invalid
      required:
      - valid
    RecommendationsAccessDeniedResponse:
      type: object
      properties:
        error:
          type: string
          description: Access denied message
        hint:
          type: string
          description: Helpful hint for resolving the access issue
      required:
      - error
    RecommendationsErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        details:
          type: object
          additionalProperties: {}
          description: Additional error details
        hint:
          type: string
          description: Helpful hint for resolving the error
      required:
      - error
    RecommendationsNotFoundResponse:
      type: object
      properties:
        error:
          type: string
          description: Not found error message
        hint:
          type: string
          description: Helpful hint for resolving the issue
      required:
      - error
    ReferenceQueryModel:
      type: object
      description: Serializer for Reference Query model instances.
      properties:
        id:
          type: integer
          readOnly: true
        query:
          type: string
        title:
          type: string
          nullable: true
        detailed_description:
          type: string
          readOnly: true
          nullable: true
        connection_id:
          type: integer
          description: Connection ID this query applies to
        source_type:
          enum:
          - USER
          - AI
          - TABLE
          - ''
          - null
          type: string
          description: |-
            * `USER` - User Provided
            * `AI` - AI Generated
            * `TABLE` - Table
          x-spec-enum-id: d2df6dee60f5d4fd
          nullable: true
        status:
          enum:
          - PROCESSING
          - ERROR
          - VALID
          - TEMPORARY
          type: string
          description: |-
            * `PROCESSING` - Processing
            * `ERROR` - Error
            * `VALID` - Valid
            * `TEMPORARY` - Temporary
          x-spec-enum-id: 134a4de492967e61
          readOnly: true
        error_message:
          type: string
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - connection_id
      - created_at
      - detailed_description
      - error_message
      - id
      - last_modified
      - query
      - status
    ReferenceQueryModelRequest:
      type: object
      description: Serializer for Reference Query model instances.
      properties:
        query:
          type: string
          minLength: 1
        title:
          type: string
          nullable: true
        connection_id:
          type: integer
          description: Connection ID this query applies to
        source_type:
          enum:
          - USER
          - AI
          - TABLE
          - ''
          - null
          type: string
          description: |-
            * `USER` - User Provided
            * `AI` - AI Generated
            * `TABLE` - Table
          x-spec-enum-id: d2df6dee60f5d4fd
          nullable: true
      required:
      - connection_id
      - query
    ReferenceQueryRequest:
      type: object
      description: Serializer for reference queries.
      properties:
        query:
          type: string
          minLength: 1
          description: The SQL query to use as reference
        title:
          type: string
          minLength: 1
          description: Optional title for the query
      required:
      - query
    STSErrorResponse400:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
    STSErrorResponse401:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
    STSErrorResponse403:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
      - error
    STSErrorResponse429:
      type: object
      properties:
        error:
          type: string
          description: Rate limit exceeded
      required:
      - error
    STSErrorResponse500:
      type: object
      properties:
        error:
          type: string
          description: Internal server error
      required:
      - error
    STSTokenRequestRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
          description: User identifier
        scopes:
          type: array
          items:
            type: string
            minLength: 1
          default:
          - query
          description: List of scopes for the token
        ttl:
          type: integer
          maximum: 900
          minimum: 60
          default: 900
          description: Time to live in seconds (60-900)
        src:
          type: string
          minLength: 1
          description: Source/Connection ID (deprecated, use srcs)
        srcs:
          type: array
          items:
            type: string
            minLength: 1
          description: List of Source/Connection IDs
        knowledge_base_entries:
          type: array
          items:
            type: string
            minLength: 1
          description: Array of knowledge base entry strings
        reference_queries:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
              minLength: 1
            description: Reference query object with title and query
          description: Array of reference query objects (title and query)
      required:
      - uid
    STSTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
        token_type:
          type: string
          description: Token type (always "bearer")
        expires_in:
          type: integer
          description: Token lifetime in seconds
        thread_id:
          type: string
          description: Thread ID (if auto-created)
      required:
      - access_token
      - expires_in
      - token_type
    SingleStoreConnectionRequest:
      type: object
      description: Serializer for SingleStore connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `SINGLESTORE`
        account_name:
          type: string
          minLength: 1
          default: SingleStore
          description: Display name for the connection
        hostname:
          type: string
          minLength: 1
          description: SingleStore server hostname
          maxLength: 255
        port:
          type: integer
          default: 3333
          description: Port number
        username:
          type: string
          minLength: 1
          description: Database username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Database password
        database_name:
          type: string
          minLength: 1
          description: Database name
          maxLength: 255
      required:
      - database_name
      - hostname
      - password
      - type
      - username
      title: SingleStore
    SnowflakeConnectionRequest:
      type: object
      description: Serializer for Snowflake connection configuration.
      properties:
        type:
          type: string
          minLength: 1
          description: Connection type identifier. Must be `SNOWFLAKE`
        account_name:
          type: string
          minLength: 1
          default: Snowflake
          description: Display name for the connection
        account:
          type: string
          minLength: 1
          description: Snowflake account identifier (e.g., xy12345.us-east-1)
          maxLength: 255
        user:
          type: string
          minLength: 1
          description: Snowflake username
          maxLength: 255
        password:
          type: string
          writeOnly: true
          description: Password for authentication (optional - use either password
            or public_key)
        public_key:
          type: string
          description: Public key for key-pair authentication (optional - use either
            password or public_key)
        warehouse:
          type: string
          description: Snowflake warehouse to use (optional)
      required:
      - account
      - type
      - user
      title: Snowflake
    SourceUpdateRequest:
      type: object
      properties:
        account_name:
          type: string
          minLength: 1
          description: New display name for the connection
      required:
      - account_name
    Thread:
      type: object
      description: Serializer for Thread model.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        connection_ids:
          description: List of connection IDs that were used in this thread
        connection_names:
          type: string
          readOnly: true
          description: List of connection names associated with this thread
        message_count:
          type: string
          readOnly: true
          description: Total number of messages in the thread
        model:
          enum:
          - sonnet-4
          - o3
          - o4-mini
          - gpt-4.1
          type: string
          x-spec-enum-id: 32d29e7b4a05e993
          description: |-
            The model used for this thread

            * `sonnet-4` - Sonnet 4
            * `o3` - o3
            * `o4-mini` - o4-mini
            * `gpt-4.1` - GPT-4.1
        source:
          enum:
          - UI
          - API
          - MCP
          type: string
          x-spec-enum-id: 5aae49abdf40e222
          readOnly: true
          description: |-
            How this thread was created

            * `UI` - Web UI
            * `API` - REST API
            * `MCP` - MCP Server
        uid:
          type: string
          readOnly: true
          description: User identifier who created this thread
      required:
      - connection_names
      - created_at
      - id
      - last_modified
      - message_count
      - source
      - title
      - uid
    ThreadMessagesAccessDeniedResponse:
      type: object
      properties:
        error:
          type: string
          description: Access denied error message
      required:
      - error
    ThreadMessagesNotFoundResponse:
      type: object
      properties:
        error:
          type: string
          description: Thread not found error message
      required:
      - error
    ThreadMessagesResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        thread_id:
          type: integer
          description: ID of the thread
        message_count:
          type: integer
          description: Total number of messages
      required:
      - message_count
      - messages
      - thread_id
    ThreadNotFoundResponse:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    ThreadNotFoundResponseDelete:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    ThreadNotFoundResponsePartialRename:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    ThreadNotFoundResponseRename:
      type: object
      properties:
        detail:
          type: string
          description: Not found error message
      required:
      - detail
    ThreadRenameRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: New title for the thread
      required:
      - title
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key authentication using X-API-Key header
    BearerAuth:
      type: http
      scheme: bearer
      description: JWT or API key authentication using Bearer scheme
servers:
- url: https://api.camelai.com
  description: camelAI API server
